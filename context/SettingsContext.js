import React, { createContext, useContext, useMemo, useState } from 'react';

const SettingsContext = createContext(null);

export const useSettings = () => useContext(SettingsContext);

const DICT = {
  en: {
    bookings: 'Upcoming',
    newBooking: 'New Booking',
    services: 'Services',
    calendar: 'Calendar',
    admin: 'Admin',
    profileSettings: 'Account & Settings',
    changeEmail: 'Email',
    language: 'Language',
    close: 'Close',
    save: 'Save',
    delete: 'Delete',
    edit: 'Edit',
    cancel: 'Cancel',
    upcoming: 'Upcoming',
    past: 'Past',
    client: 'Client',
    clientName: 'Client name',
    phone: 'Phone',
    emailOptional: 'Email (optional)',
    service: 'Service',
    chooseService: 'Choose service',
    durationMin: 'Duration (min)',
    staff: 'Staff',
    apptTime: 'Appointment time',
    date: 'Date',
    time: 'Time',
    notesOptional: 'Notes (optional)',
    saveBooking: 'Save booking',
    saveChanges: 'Save changes',
    addService: 'Add service',
    addBooking: 'Add booking',
    editServices: 'Edit Services',
    typeOfService: 'Type of service',
    pricePLN: 'Price (PLN)',
    duration: 'Duration (min)',
    durationHours: 'Hours',
    durationMinutes: 'Minutes',
    today: 'Today',
    prev: 'Prev',
    next: 'Next',
    saved: 'Changes saved',
    bookingSaved: 'Booking saved',
    bookingDeleted: 'Booking deleted',
    serviceAdded: 'Service added',
    serviceRemoved: 'Service removed',
    timeUnavailable: 'That time is already taken for this stylist.',
    clientNameRequired: 'Client name is required',
    dateRequired: 'Date is required',
    timeRequired: 'Time is required',
    pastTimeNotAllowed: 'Cannot book appointments in the past',
    signIn: 'Sign In',
    signUp: 'Sign Up',
    haveAccount: 'Have an account?',
    needAccount: "Don't have an account?",
    email: 'Email',
    password: 'Password',
    fullName: 'Full name (optional)',
    signOut: 'Sign Out',
    forgotPassword: 'Forgot password?',
    resetPassword: 'Reset Password',
    newPassword: 'New password',
    confirm: 'Confirm',
    users: 'Users',
    makeAdmin: 'Make admin',
    makeStaff: 'Make staff',
    disable: 'Disable',
    enable: 'Enable',
    stats: 'Stats',
    searchUsers: 'Search users',
    sendReset: 'Send reset email',
    deleteProfile: 'Delete profile row',
    viewBookings: "View user's bookings",
    exportAll: 'Export ALL bookings (CSV)',
    exportUser: 'Export this user (CSV)',
    previewAs: 'Preview as this user',
    stopPreview: 'Stop preview',
    noBookings: 'No bookings found.',
    addUser: 'Add user',
    role: 'Role',
    name: 'Name',
    emailProfiles: 'Email (profiles)',
    phoneProfiles: 'Phone',
    daily: 'Daily',
    schedule: 'Schedule',
    monthly: 'Monthly',
    calendarView: 'View',
    navigation: 'Navigation',
    previous: 'Previous',
    next: 'Next',
    proximityWarning: 'Booking in 30 minutes',
  },
  pl: {
    bookings: 'Nadchodzace',
    newBooking: 'Nowa rezerwacja',
    services: 'Uslugi',
    calendar: 'Kalendarz',
    admin: 'Admin',
    profileSettings: 'Konto i ustawienia',
    changeEmail: 'Email',
    language: 'Jezyk',
    close: 'Zamknij',
    save: 'Zapisz',
    delete: 'Usun',
    edit: 'Edytuj',
    cancel: 'Anuluj',
    upcoming: 'Nadchodzace',
    past: 'Przeszle',
    client: 'Klient',
    clientName: 'Imie i nazwisko',
    phone: 'Telefon',
    emailOptional: 'Email (opcjonalnie)',
    service: 'Usluga',
    chooseService: 'Wybierz usluge',
    pricePLN: 'Cena (PLN)',
    duration: 'Czas (min)',
    durationMin: 'Czas (min)',
    durationHours: 'Godziny',
    durationMinutes: 'Minuty',
    staff: 'Personel',
    apptTime: 'Termin wizyty',
    date: 'Data',
    time: 'Godzina',
    notesOptional: 'Notatki (opcjonalnie)',
    saveBooking: 'Zapisz rezerwacje',
    saveChanges: 'Zapisz zmiany',
    addService: 'Dodaj usluge',
    addBooking: 'Dodaj rezerwacje',
    editServices: 'Edytuj uslugi',
    typeOfService: 'Rodzaj uslugi',
    today: 'Dzisiaj',
    prev: 'Wstecz',
    next: 'Dalej',
    saved: 'Zapisano zmiany',
    bookingSaved: 'Rezerwacja zapisana',
    bookingDeleted: 'Usunieto rezerwacje',
    serviceAdded: 'Dodano usluge',
    serviceRemoved: 'Usunieto usluge',
    timeUnavailable: 'Ten termin jest juz zajety dla tego stylisty.',
    clientNameRequired: 'Imie klienta jest wymagane',
    dateRequired: 'Data jest wymagana',
    timeRequired: 'Czas jest wymagany',
    pastTimeNotAllowed: 'Nie mozna rezerwowac wizyt w przeszlosci',
    signIn: 'Zaloguj',
    signUp: 'Zarejestruj',
    haveAccount: 'Masz konto?',
    needAccount: 'Nie masz konta?',
    email: 'Email',
    password: 'Haslo',
    fullName: 'Imie i nazwisko (opcjonalnie)',
    signOut: 'Wyloguj',
    forgotPassword: 'Zapomniales hasla?',
    resetPassword: 'Ustaw haslo',
    newPassword: 'Nowe haslo',
    confirm: 'Potwierdz',
    users: 'Uzytkownicy',
    makeAdmin: 'Nadaj admina',
    makeStaff: 'Nadaj staff',
    disable: 'Wylacz',
    enable: 'Wlacz',
    stats: 'Statystyki',
    searchUsers: 'Szukaj uzytkownikow',
    sendReset: 'Wyslij email resetu',
    deleteProfile: 'Usun rekord profilu',
    viewBookings: 'Pokaz rezerwacje uzytkownika',
    exportAll: 'Eksport wszystkich rezerwacji (CSV)',
    exportUser: 'Eksport tego uzytkownika (CSV)',
    previewAs: 'Podejrzyj jako uzytkownik',
    stopPreview: 'Zakoncz podglad',
    noBookings: 'Brak rezerwacji.',
    addUser: 'Dodaj uzytkownika',
    role: 'Rola',
    name: 'Imie i nazwisko',
    emailProfiles: 'Email (profil)',
    phoneProfiles: 'Telefon',
    daily: 'Dzienny',
    schedule: 'Harmonogram',
    monthly: 'Miesieczny',
    calendarView: 'Widok',
    navigation: 'Nawigacja',
    previous: 'Poprzedni',
    next: 'Nastepny',
    proximityWarning: 'Rezerwacja za 30 minut',
  },
};

export function SettingsProvider({ children }) {
  const [lang, setLang] = useState('en');
  const [devAutoLogin, setDevAutoLogin] = useState(false);

  const t = useMemo(() => {
    return (key, vars) => {
      const source = DICT[lang][key] ?? key;
      if (!vars) return source;
      return Object.entries(vars).reduce(
        (acc, [k, v]) => acc.replaceAll(`{${k}}`, String(v)),
        source
      );
    };
  }, [lang]);

  const value = useMemo(
    () => ({
      t,
      lang,
      setLang,
      devAutoLogin,
      setDevAutoLogin,
    }),
    [t, lang, devAutoLogin]
  );

  return <SettingsContext.Provider value={value}>{children}</SettingsContext.Provider>;
}
